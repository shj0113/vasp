#!/usr/bin/env perl 
#===============================================================================
#
#         FILE: incar.pl
#
#  DESCRIPTION: This script generate INCAR file of VASP
#				Generate default incar and substitude or add it
#
#       AUTHOR: Sung Beom Cho, csb444@hanyang.ac.kr
# ORGANIZATION: Hanyang University
#      VERSION: 1.0
#      CREATED: 2014년 04월 18일 15시 52분 44초
#===============================================================================


use strict;
use warnings;
#use Data::Dumper;
#use Perl::Tags;
use List::MoreUtils qw/any/;

print "(usage): incar.pl (option to add or substitude)\n";
print "       : distinguish the options with the space \n";
print "(example): incar.pl LCHARG=.TRUE. NSW=0 \n";


if (-e "INCAR"){
	system("mv INCAR INCAR.bkup"); 
	print "previous INCAR is backed up in INCAR.bkup\n";
}
if (scalar @ARGV == 0) {
	print "INCAR is generated, please check it.\n";
}else{
	print "received arguments are @ARGV\n";
	print "INCAR is generated, please check it.\n";
}

my @put_incar = @ARGV;
my @sub_incar;
my @temp;
for my $i (@put_incar) {
	@temp=split(/=/,$i);
	push @sub_incar,$temp[0];
}

open(INCAR,">INCAR");
print INCAR ("# Start Parameter for run #
#This INCAR is generated by incar.pl

SYSTEM = Sample
PREC = Accurate
#ICHARG = 11
ISPIN = 2

# Electronic Relaxation #
ENCUT = 520
NELM = 100
NELMIN = 6
EDIFF = 1E-05
LREAL = AUTO
ALGO = Normal
#LMAXMIX = 4

# Ionic Relaxation #
EDIFFG = -0.01
NSW = 200
IBRION = 2
ISIF = 2
ISYM = 2

# DOS related values #
ISMEAR = 0 
SIGMA = 0.05
#NEDOS = 1501

# Write Flags #
LWAVE = .FALSE.
LCHARG = .FALSE.
#LAECHG = .TRUE.
#LVHAR = .TRUE.
#LORBIT = 11

# Dipole Corrections #
#LDIPOL = .TRUE.
#IDIPOL = 3

# On Site Coulomb Interaction #
#LDAU = .TRUE.
#LDAUTYPE = 1
#LDAUL = 2 -1
#LDAUU = 4 0

# DFT-D2 Method for Grimme #
#LVDW = .TRUE.

# Additional Options
");
close(INCAR);

undef @temp;
my $check_incar = 0;
open(INCAR,"<INCAR");
my @lines = <INCAR>;
close (INCAR);
open (INCAR,">INCAR");
for my $i (@lines) {
	if (any {$i =~ /$_/} @sub_incar){
		@temp = split(/=/,$i);
		for (my $j=0;$j<scalar @sub_incar;$j++) {
			if ($temp[0] =~ $sub_incar[$j]){
				print INCAR "$put_incar[$j]\n";
				splice @put_incar, $j, 1, "";
			}
		}
	}
	print INCAR $i unless any {$i =~ /$_/} @sub_incar;
}
@put_incar = grep {$_ =~ /^\w/} @put_incar;
print INCAR "$_\n" for @put_incar ;
